{
   "name": "AWS",
   "logo": "https://dytvr9ot2sszz.cloudfront.net/logz-docs/shipper-logos/aws.svg",
   "label": "AWS",
   "description": "",
   "hint": "Select the environment where you want to deploy the Logz.io Telemetry Collector.",
   "subtypes": [
     {
       "name": "AWS_Metrics",
       "logo": "https://dytvr9ot2sszz.cloudfront.net/logz-docs/shipper-logos/aws.svg",
       "label": "Metrics",
       "description": "via Cloudwatch",
       "hint": "AWS metrics to ship to Logz.io",
       "supportedOs": ["AWS_Cloudformation"],
       "productTags": ["METRICS"],
      "filterTags": ["AWS", "Most Popular"],
       "integrationTemplate": "metric-stream-helpers/aws/1.3.2/sam-template.yaml&param_logzioDestination=https://listener-aws-metrics-stream-<<LOGZIO_ACCOUNT_REGION_CODE>>.logz.io/&param_logzioListener=https://<<LOGZIO_LISTENER_ADDRESS>>:8053",
       "datasources": [
         {
           "name": "AWS_Metrics",
           "logo": "https://dytvr9ot2sszz.cloudfront.net/logz-docs/shipper-logos/aws-cloudwatch.png",
           "label": "AWS Metrics",
           "description": "Ship your metrics via CloudFormation, set up your AWS region and stack, and choose the specific namespace from which you wish to collect data.",
           "params": [
            {
              "type": "single-select",
              "name": "awsRegion",
              "label": "AWS Region",
              "description": "AWS Region",
              "required": true,
              "hint": "Your AWS account region",
              "options": [
                { "label": "us-east-1", "value": "us-east-1" },
                { "label": "us-east-2", "value": "us-east-2" },
                { "label": "us-west-1", "value": "us-west-1" },
                { "label": "us-west-2", "value": "us-west-2" },
                { "label": "eu-central-1", "value": "eu-central-1" },
                { "label": "eu-north-1", "value": "eu-north-1" },
                { "label": "eu-west-1", "value": "eu-west-1" },
                { "label": "eu-west-2", "value": "eu-west-2" },
                { "label": "eu-west-3", "value": "eu-west-3" },
                { "label": "sa-east-1", "value": "sa-east-1" },
                { "label": "ap-northeast-1", "value": "ap-northeast-1" },
                { "label": "ap-northeast-2", "value": "ap-northeast-2" },
                { "label": "ap-northeast-3", "value": "ap-northeast-3" },
                { "label": "ap-south-1", "value": "ap-south-1" },
                { "label": "ap-southeast-1", "value": "ap-southeast-1" },
                { "label": "ap-southeast-2", "value": "ap-southeast-2" },
                { "label": "ca-central-1", "value": "ca-central-1" }
              ]
            },
            {
              "type": "text",
              "name": "stackName",
              "label": "Enter your stack name",
              "required": true,
              "description": "The name of your Cloudwatch stack.",
              "value": "logzio-metric-stream",
              "pattern": "^[a-zA-Z0-9-]+$",
              "patternError": "Only letters, numbers and dashes are allowed"
            }
             ],
           "telemetries": [
             {
               "type": "METRICS",
               "hint": "Switch the toggle on if you want Logz.io Telemetry Collector to collect metrics from your AWS services.",
               "params":
               [
                {
                  "type": "multi-select",
                  "name": "param_awsNamespaces",
                  "label": "AWS Namespaces",
                  "required": false,
                  "description": "Services that you need to collect metrics from.",
                  "options": [
                    { "label": "All Namespaces", "value": "all-namespaces" },
                    { "label": "Amplify", "value": "AWS/AmplifyHosting" },
                    { "label": "API Gateway", "value": "AWS/ApiGateway" },
                    { "label": "App Runner", "value": "AWS/AppRunner" },
                    { "label": "AppStream 2.0", "value": "AWS/AppStream" },
                    { "label": "AppSync", "value": "AWS/AppSync" },
                    { "label": "Athena", "value": "AWS/Athena" },
                    { "label": "Backup", "value": "AWS/Backup" },
                    { "label": "Billing and Cost Management", "value": "AWS/Billing" },
                    { "label": "Certificate Manager", "value": "AWS/CertificateManager" },
                    { "label": "Chatbot", "value": "AWS/Chatbot" },
                    { "label": "Chime SDK", "value": "AWS/ChimeSDK" },
                    { "label": "Client VPN", "value": "AWS/ClientVPN" },
                    { "label": "CloudFront", "value": "AWS/CloudFront" },
                    { "label": "CloudHSM", "value": "AWS/CloudHSM" },
                    { "label": "CloudSearch", "value": "AWS/CloudSearch" },
                    { "label": "CloudTrail", "value": "AWS/CloudTrail" },
                    { "label": "CloudWatch agent", "value": "CWAgent" },
                    { "label": "CloudWatch Logs", "value": "AWS/Logs" },
                    { "label": "CloudWatch metric streams", "value": "AWS/CloudWatch/MetricStreams" },
                    { "label": "CloudWatch RUM", "value": "AWS/RUM" },
                    { "label": "CloudWatch Synthetics", "value": "CloudWatchSynthetics" },
                    { "label": "CodeBuild", "value": "AWS/CodeBuild" },
                    { "label": "CodeGuru Profiler", "value": "AWS/CodeGuruProfiler" },
                    { "label": "Cognito", "value": "AWS/Cognito" },
                    { "label": "Connect", "value": "AWS/Connect" },
                    { "label": "Database Migration Service", "value": "AWS/DMS" },
                    { "label": "Data Lifecycle Manager", "value": "AWS/DataLifecycleManager" },
                    { "label": "DataSync", "value": "AWS/DataSync" },
                    { "label": "Direct Connect", "value": "AWS/DX" },
                    { "label": "DocumentDB", "value": "AWS/DocDB" },
                    { "label": "DynamoDB", "value": "AWS/DynamoDB" },
                    { "label": "DynamoDB Accelerator (DAX)", "value": "AWS/DAX" },
                    { "label": "EC2", "value": "AWS/EC2" },
                    { "label": "EC2 Auto Scaling", "value": "AWS/AutoScaling" },
                    { "label": "EC2 Elastic Graphics", "value": "AWS/ElasticGPUs" },
                    { "label": "EC2 Spot Fleet", "value": "AWS/EC2Spot" },
                    { "label": "ECS", "value": "AWS/ECS" },
                    { "label": "ECS Cluster auto scaling", "value": "AWS/ECS/ManagedScaling" },
                    { "label": "ElastiCache", "value": "AWS/ElastiCache" },
                    { "label": "Elastic Beanstalk", "value": "AWS/ElasticBeanstalk" },
                    { "label": "Elastic Block Store", "value": "AWS/EBS" },
                    { "label": "Elastic File System", "value": "AWS/EFS" },
                    { "label": "Elastic Inference", "value": "AWS/ElasticInference" },
                    { "label": "Elastic Load Balancing - Application", "value": "AWS/ApplicationELB" },
                    { "label": "Elastic Load Balancing - Classic", "value": "AWS/ELB" },
                    { "label": "Elastic Load Balancing - Gateway", "value": "AWS/GatewayELB" },
                    { "label": "Elastic Load Balancing - Network", "value": "AWS/NetworkELB" },
                    { "label": "Elastic Transcoder", "value": "AWS/ElasticTranscoder" },
                    { "label": "EMR", "value": "AWS/ElasticMapReduce" },
                    { "label": "EventBridge", "value": "AWS/Events" },
                    { "label": "FSx", "value": "AWS/FSx" },
                    { "label": "GameLift", "value": "AWS/GameLift" },
                    { "label": "Global Accelerator", "value": "AWS/GlobalAccelerator" },
                    { "label": "Glue", "value": "Glue" },
                    { "label": "Ground Station", "value": "AWS/GroundStation" },
                    { "label": "HealthLake", "value": "AWS/HealthLake" },
                    { "label": "Inspector", "value": "AWS/Inspector" },
                    { "label": "Interactive Video Service", "value": "AWS/IVS" },
                    { "label": "Interactive Video Service", "value": "AWS/IVSChat" },
                    { "label": "IoT", "value": "AWS/IoT" },
                    { "label": "IoT Analytics", "value": "AWS/IoTAnalytics" },
                    { "label": "IoT SiteWise", "value": "AWS/IoTSiteWise" },
                    { "label": "IoT Things Graph", "value": "AWS/ThingsGraph" },
                    { "label": "IoT TwinMaker", "value": "AWS/IoTTwinMaker" },
                    { "label": "Key Management Service (KMS)", "value": "AWS/KMS" },
                    { "label": "Keyspaces (for Apache Cassandra)", "value": "AWS/Cassandra" },
                    { "label": "Kinesis Data Analytics", "value": "AWS/KinesisAnalytics" },
                    { "label": "Kinesis Data Firehose", "value": "AWS/Firehose" },
                    { "label": "Kinesis Data Streams", "value": "AWS/Kinesis" },
                    { "label": "Kinesis Video Streams", "value": "AWS/KinesisVideo" },
                    { "label": "Lambda", "value": "AWS/Lambda" },
                    { "label": "Lex", "value": "AWS/Lex" },
                    { "label": "Location Service", "value": "AWS/Location" },
                    { "label": "Lookout for Metrics", "value": "AWS/LookoutMetrics" },
                    { "label": "Machine Learning", "value": "AWS/ML" },
                    { "label": "Managed Streaming for Apache Kafka", "value": "AWS/Kafka" },
                    { "label": "MediaConnect", "value": "AWS/MediaConnect" },
                    { "label": "MediaConvert", "value": "AWS/MediaConvert" },
                    { "label": "MediaLive", "value": "AWS/MediaLive" },
                    { "label": "MediaPackage", "value": "AWS/MediaPackage" },
                    { "label": "MediaStore", "value": "AWS/MediaStore" },
                    { "label": "MediaTailor", "value": "AWS/MediaTailor" },
                    { "label": "MQ", "value": "AWS/AmazonMQ" },
                    { "label": "Neptune", "value": "AWS/Neptune" },
                    { "label": "Network Firewall", "value": "AWS/NetworkFirewall" },
                    { "label": "Network Manager", "value": "AWS/NetworkManager" },
                    { "label": "Nimble Studio", "value": "AWS/NimbleStudio" },
                    { "label": "OpenSearch Service", "value": "AWS/ES" },
                    { "label": "OpsWorks", "value": "AWS/OpsWorks" },
                    { "label": "Polly", "value": "AWS/Polly" },
                    { "label": "Private CA", "value": "AWS/ACMPrivateCA" },
                    { "label": "PrivateLink Endpoints", "value": "AWS/PrivateLinkEndpoints" },
                    { "label": "PrivateLink Services", "value": "AWS/PrivateLinkServices" },
                    { "label": "QLDB", "value": "AWS/QLDB" },
                    { "label": "QuickSight", "value": "AWS/QuickSight" },
                    { "label": "RDS", "value": "AWS/RDS" },
                    { "label": "Redshift", "value": "AWS/Redshift" },
                    { "label": "RoboMaker", "value": "AWS/Robomaker" },
                    { "label": "Route 53", "value": "AWS/Route53" },
                    { "label": "Route 53 Application Recovery Controller", "value": "AWS/Route53RecoveryReadiness" },
                    { "label": "S3", "value": "AWS/S3" },
                    { "label": "S3 Storage Lens", "value": "AWS/S3/Storage-Lens" },
                    { "label": "SageMaker", "value": "AWS/SageMaker" },
                    { "label": "SageMaker Model Building Pipelines", "value": "AWS/SageMaker/ModelBuildingPipeline" },
                    { "label": "Secrets Manager", "value": "AWS/SecretsManager" },
                    { "label": "Service Catalog", "value": "AWS/ServiceCatalog" },
                    { "label": "Shield Advanced", "value": "AWS/DDoSProtection" },
                    { "label": "Simple Email Service (SES)", "value": "AWS/SES" },
                    { "label": "Simple Notification Service (SNS)", "value": "AWS/SNS" },
                    { "label": "Simple Queue Service (SQS)", "value": "AWS/SQS" },
                    { "label": "Simple Workflow Service", "value": "AWS/SWF" },
                    { "label": "Step Functions", "value": "AWS/States" },
                    { "label": "Storage Gateway", "value": "AWS/StorageGateway" },
                    { "label": "Systems Manager Run Command", "value": "AWS/SSM-RunCommand" },
                    { "label": "Textract", "value": "AWS/Textract" },
                    { "label": "Timestream", "value": "AWS/Timestream" },
                    { "label": "Transfer for SFTP", "value": "AWS/Transfer" },
                    { "label": "Translate", "value": "AWS/Translate" },
                    { "label": "Trusted Advisor", "value": "AWS/TrustedAdvisor" },
                    { "label": "VPC - NAT Gateway", "value": "AWS/NATGateway" },
                    { "label": "VPC - Transit Gateway", "value": "AWS/TransitGateway" },
                    { "label": "VPC IP Address Manager", "value": "AWS/IPAM" },
                    { "label": "VPN", "value": "AWS/VPN" },
                    { "label": "WAF", "value": "WAF" },
                    { "label": "WAF2", "value": "AWS/WAFV2" },
                    { "label": "WorkMail", "value": "AWS/WorkMail" },
                    { "label": "WorkSpaces", "value": "AWS/WorkSpaces" },
                    { "label": "WorkSpaces Web", "value": "AWS/WorkSpacesWeb" }
                  ]
                },
                {
                  "type": "text",
                  "name": "param_customNamespace",
                  "label": "Custom Namespace",
                  "required": false,
                  "description": "Enter the name of your custom namespace."
                }                
               ]
             }
           ]
         }
       ]
     }
   ]
 }
