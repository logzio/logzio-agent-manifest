mac_run:
linux_run:
windows_run: |
  function New-OtelReceiver {
    param (
      [hashtable]$FuncArgs
    )

    $local:Err = Test-AreFuncArgsExist $FuncArgs @('LogSources', 'LogsType')
    if ($Err.Count -ne 0) {
      Write-Output $Err[0]
      return 2
    }

    $local:LogSources = $FuncArgs.LogSources
    $local:LogsType = $FuncArgs.LogsType

    if ($LogSources.Count -eq 0) {
      Write-Output 'There is no log source'
      return 1
    }
  
    foreach ($LogSource in $LogSources) {
      $local:Err = Add-YamlFileFieldValue "$LogzioTempDir\resources\otel\receivers\filelog.yaml" '.receiver.filelog/NAME.include' $LogSource
      if ($Err.Count -ne 0) {
        Write-Output "error addinng log sources to filelog receiver: $($Err[0])"
        return 3
      }
    }

    $local:Err = Set-YamlFileFieldValue "$LogzioTempDir\resources\otel\receivers\filelog.yaml" '.receiver.filelog/NAME.attributes.type' $LogsType
    if ($Err.Count -ne 0) {
      Write-Output "error setting type to filelog receiver: $($Err[0])"
      return 4
    }
  }
receiver:
  filelog/NAME:
    include: []
    include_file_path: true
    operators:
      - type: move
        from: attributes["log.file.name"]
        to: attributes["log_file_name"]
      - type: move
        from: attributes["log.file.path"]
        to: attributes["log_file_path"]
    attributes:
      type:
