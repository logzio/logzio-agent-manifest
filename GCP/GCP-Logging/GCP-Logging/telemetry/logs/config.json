{
    "steps": [
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "args": [
                "projects",
                "add-iam-policy-binding",
                "$PROJECT_ID",
                "--member=serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com",
                "--role=roles/logging.admin"
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "args": [
                "projects",
                "add-iam-policy-binding",
                "$PROJECT_ID",
                "--member=serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com",
                "--role=roles/pubsub.admin"
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "args": [
                "projects",
                "add-iam-policy-binding",
                "$PROJECT_ID",
                "--member=serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com",
                "--role=roles/cloudfunctions.admin"
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "entrypoint": "bash",
            "args": [
                "-c",
                "gcloud pubsub topics list | \n while read -r line \ndo \n stringarray=($line) \n pubsub_topic_remove_name=\"projects/$PROJECT_ID/topics/$_PUBSUB_TOPIC_NAME\" \n if [[ \"${stringarray[1]}\" == \"$pubsub_topic_remove_name\" ]] ;then \n delete_code=\"$(gcloud pubsub topics delete $_PUBSUB_TOPIC_NAME)\" \n fi \n done"
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "entrypoint": "bash",
            "args": [
                "-c",
                "gcloud logging sinks delete $_SINK_NAME || true",
                "y"
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "entrypoint": "bash",
            "args": [
                "-c",
                "gcloud pubsub subscriptions list | \n while read -r line \ndo \n stringarray=($line) \n pubsub_subscription_remove_name=\"projects/$PROJECT_ID/subscriptions/$_PUBSUB_SUBSCRIPTION_NAME\" \n if [[ \"${stringarray[1]}\" == \"$pubsub_subscription_remove_name\" ]] ;then \n delete_code=\"$(gcloud pubsub subscriptions delete $_PUBSUB_SUBSCRIPTION_NAME)\" \n fi \n done"
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "entrypoint": "bash",
            "args": ["-c", "gcloud pubsub topics create $_PUBSUB_TOPIC_NAME"]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "entrypoint": "bash",
            "args": [
                "-c",
                "gcloud pubsub subscriptions create $_PUBSUB_SUBSCRIPTION_NAME --topic $_PUBSUB_TOPIC_NAME --push-endpoint \"https://$_REGION-$PROJECT_ID.cloudfunctions.net/$_FUNCTION_NAME/?token=$_LOGZIO_TOKEN&type=$_TYPE_NAME&listener=$_LOGZIO_LISTENER\""
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "entrypoint": "bash",
            "args": [
                "-c",
                "gcloud logging sinks create $_SINK_NAME pubsub.googleapis.com/projects/$PROJECT_ID/topics/$_PUBSUB_TOPIC_NAME --log-filter=\"NOT (resource.type=\"cloud_function\" resource.labels.function_name=\"*-func_logzio\") AND $_FILTER_LOG\""
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "entrypoint": "bash",
            "args": [
                "-c",
                "data=$(gcloud logging sinks describe $_SINK_NAME)\ngcloud logging sinks describe $_SINK_NAME |\nwhile read -r line\ndo\n  stringarray=($line)\n\n  if [ ${stringarray[0]} == 'writerIdentity:' ]\n  then\n    indentity=\"${stringarray[1]}\"\n    gcloud pubsub topics add-iam-policy-binding $_PUBSUB_TOPIC_NAME --member \"${indentity}\" --role roles/pubsub.publisher\n  fi\ndone\n"
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "args": [
                "functions",
                "deploy",
                "$_FUNCTION_NAME-func_logzio",
                "--region=$_REGION",
                "--entry-point=LogzioHandler",
                "--trigger-http",
                "--runtime=go116",
                "--source=gs://logzio-pubsub-handler/cloud_function.zip"
            ]
        },
        {
            "name": "gcr.io/cloud-builders/gcloud",
            "entrypoint": "bash",
            "args": [
                "-c",
                "gcloud alpha functions add-iam-policy-binding $_FUNCTION_NAME --region=$_REGION --member=allUsers --role=roles/cloudfunctions.invoker\n"
            ]
        }
    ],
    "substitutions": {
        "_PUBSUB_TOPIC_NAME": "pubsub-topic-logs-to-logzio",
        "_PUBSUB_SUBSCRIPTION_NAME": "pubsub-subscription-logs-to-logzio",
        "_SINK_NAME": "sink-logs-to-logzio",
        "_FUNCTION_NAME": "logzioHandler",
        "_REGION": "us-central1",
        "_LOGZIO_LISTENER": "listener",
        "_LOGZIO_TOKEN": "token",
        "_TYPE_NAME": "pubsub",
        "_FILTER_LOG": ""
    },
    "options": {
        "dynamic_substitutions": true,
        "substitution_option": "ALLOW_LOOSE"
    }
}
