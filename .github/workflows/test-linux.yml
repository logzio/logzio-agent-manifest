name: localhost test on Linux

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build and Upload to Test Release"]
    types:
      - completed

permissions:
  contents: read
  actions: read

jobs:
  test-linux:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up agent configuration
        run: mkdir -p /tmp/logzio-agent-test

      - name: Copy test configuration
        run: cp tests/localhost_linux.json /tmp/logzio-agent-test/config.json

      - name: Set LOGZIO_ID
        run: echo "LOGZIO_ID=$(uuidgen)" >> $GITHUB_ENV

      - name: Download and extract Linux agent
        run: |
          # Create necessary directories
          mkdir -p /tmp/logzio
          
          # Download the agent from test release
          curl -L https://github.com/logzio/logzio-agent-manifest/releases/download/test/linux_localhost_linux.tar.gz -o /tmp/logzio/agent_linux.tar.gz
          
          # Extract the archive
          tar -zxf /tmp/logzio/agent_linux.tar.gz --directory /tmp/logzio

      - name: Install agent
        run: |
          # Create the agent directory with proper permissions
          sudo mkdir -p /opt/logzio-agent
          sudo chown -R $USER: /opt/logzio-agent
          
          # Run the agent installation script with debug configuration
          sudo bash /tmp/logzio/agent.bash --url=https://app.logz.io --id=${LOGZIO_ID} --debug=/tmp/logzio-agent-test/config.json --release=test
          
      - name: Check agent installation
        run: |
          sleep 10
          cat /opt/logzio-agent/logzio-otel-collector/otel_config.yaml
          ps aux | grep otel-collector
          
      - name: Verify agent is running
        run: |
          for i in {1..5}; do
            if pgrep -f "otel-collector" > /dev/null; then
              echo "Agent is running"
              exit 0
            fi
            echo "Waiting for agent to start... attempt $i"
            sleep 10
          done
          echo "Agent failed to start"
          exit 1
        env:
          LOGZIO_LOGS_TOKEN: ${{ secrets.LOGZIO_LOGS_TOKEN }}
          LOGZIO_METRICS_TOKEN: ${{ secrets.LOGZIO_METRICS_TOKEN }}
          LOGZIO_TRACES_TOKEN: ${{ secrets.LOGZIO_TRACES_TOKEN }}