on:
  push:
    branches:
      - master

jobs:
  update_version:
    name: Update Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Increase Version
        run: |
          version=$(cat ${GITHUB_WORKSPACE}/version)
          major=$(echo "$version" | cut -d'.' -f1)
          minor=$(echo "$version" | cut -d'.' -f2)
          patch=$(echo "$version" | cut -d'.' -f3)
          
          if [[ $patch -lt 99 ]]; then
            ((patch++))
          elif [[ $minor -lt 99 ]]; then
            patch=0
            ((minor++))
          else
            patch=0
            minor=0
            ((major++))
          fi
          
          next_version="$major.$minor.$patch"
          echo "$next_version" > ${GITHUB_WORKSPACE}/version
      - name: Create Github Output Env
        id: version
        run: |
          version=$(cat ${GITHUB_WORKSPACE}/version)
          echo "VERSION=$version" >> $GITHUB_OUTPUT
      - name: Push Change
        run: |
          git config --global user.name ShiranAvidov
          git config --global user.email shiran.avidov@logz.io
          git add ./version
          git commit -m "update version"
          git push
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
  
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: update_version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Push tag
        run: |
          git tag "${{ needs.update_version.outputs.VERSION }}"
          git push origin "${{ needs.update_version.outputs.VERSION }}"
      - name: Create directory
        run : |
          mkdir ${GITHUB_WORKSPACE}/tars
      - name: Compress Windows Files
        run: |
          tar -czvf ${GITHUB_WORKSPACE}/tars/agent_windows.tar.gz -C ${GITHUB_WORKSPACE}/scripts/windows . -C ${GITHUB_WORKSPACE} version
          tar -czvf ${GITHUB_WORKSPACE}/tars/windows_kubernetes_aks.tar.gz -C ${GITHUB_WORKSPACE}/datasources/windows kubernetes/aks -C ${GITHUB_WORKSPACE} resources
          tar -czvf ${GITHUB_WORKSPACE}/tars/windows_kubernetes_eks.tar.gz -C ${GITHUB_WORKSPACE}/datasources/windows kubernetes/eks -C ${GITHUB_WORKSPACE} resources
          tar -czvf ${GITHUB_WORKSPACE}/tars/windows_kubernetes_gke.tar.gz -C ${GITHUB_WORKSPACE}/datasources/windows kubernetes/gke -C ${GITHUB_WORKSPACE} resources
          tar -czvf ${GITHUB_WORKSPACE}/tars/windows_kubernetes_digitalocean.tar.gz -C ${GITHUB_WORKSPACE}/datasources/windows kubernetes/digitalocean -C ${GITHUB_WORKSPACE} resources
          tar -czvf ${GITHUB_WORKSPACE}/tars/windows_localhost_windows.tar.gz -C ${GITHUB_WORKSPACE}/datasources/windows localhost/windows -C ${GITHUB_WORKSPACE} resources
      - name: Compress Linux Files
        run: |
          tar -czvf ${GITHUB_WORKSPACE}/tars/agent_linux.tar.gz -C ${GITHUB_WORKSPACE}/scripts/linux . -C ${GITHUB_WORKSPACE} version
          tar -czvf ${GITHUB_WORKSPACE}/tars/linux_kubernetes_aks.tar.gz -C ${GITHUB_WORKSPACE}/datasources/linux kubernetes/aks -C ${GITHUB_WORKSPACE} resources -C ${GITHUB_WORKSPACE} resources-linux
          tar -czvf ${GITHUB_WORKSPACE}/tars/linux_kubernetes_eks.tar.gz -C ${GITHUB_WORKSPACE}/datasources/linux kubernetes/eks -C ${GITHUB_WORKSPACE} resources -C ${GITHUB_WORKSPACE} resources-linux
          tar -czvf ${GITHUB_WORKSPACE}/tars/linux_kubernetes_gke.tar.gz -C ${GITHUB_WORKSPACE}/datasources/linux kubernetes/gke -C ${GITHUB_WORKSPACE} resources -C ${GITHUB_WORKSPACE} resources-linux
          tar -czvf ${GITHUB_WORKSPACE}/tars/linux_kubernetes_digitalocean.tar.gz -C ${GITHUB_WORKSPACE}/datasources/linux kubernetes/digitalocean -C ${GITHUB_WORKSPACE} resources -C ${GITHUB_WORKSPACE} resources-linux
          tar -czvf ${GITHUB_WORKSPACE}/tars/linux_aws_ec2.tar.gz -C ${GITHUB_WORKSPACE}/datasources/linux aws/ec2 -C ${GITHUB_WORKSPACE} resources -C ${GITHUB_WORKSPACE} resources-linux
          tar -czvf ${GITHUB_WORKSPACE}/tars/linux_localhost_linux.tar.gz -C ${GITHUB_WORKSPACE}/datasources/linux localhost/linux -C ${GITHUB_WORKSPACE} resources -C ${GITHUB_WORKSPACE} resources-linux
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.update_version.outputs.VERSION }}
          release: ${{ needs.update_version.outputs.VERSION }}
          body: |
            New Release ${{ needs.update_version.outputs.VERSION }}
          artifacts: "${GITHUB_WORKSPACE}/tars/*.tar.gz"
